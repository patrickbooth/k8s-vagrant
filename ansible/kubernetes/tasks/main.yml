---
# tasks file for kubernetes

#
# configure node for kubernetes
- name: Unmount swapfile
  ansible.posix.mount: 
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
- name: Disable swap
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Add br_netfilter kernel module
  community.general.modprobe:
    name: br_netfilter
    state: present
- name: Add overlay kernel module
  community.general.modprobe:
    name: overlay
    state: present
- name: Configure k8s for system modules
  ansible.builtin.copy:
    content: |
      br_netfilter
      overlay
    dest: /etc/modules-load.d/k8s.conf

- name: Fix net.bridge.bridge-nf-call-iptables issue
  ansible.builtin.copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
    dest: /etc/sysctl.d/k8s.conf
  register: fix
- name: Update kernel params
  ansible.builtin.command: sysctl --system
  when: fix.changed

- name: Set SELinux to permissive mode
  ansible.posix.selinux:
    policy: targeted
    state: permissive

#
# Turn off firewalld
- name: Turn off firewalld
  ansible.builtin.service:
    name: firewalld
    state: stopped

#
# install packages
- name: Install dnf-utils
  ansible.builtin.dnf:
    name:
      - dnf-utils
    state: latest
- name: Add docker repo for containerd
  ansible.builtin.command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
- name: Install containerd
  ansible.builtin.dnf:
    name:
      - containerd.io
    state: latest
- ansible.builtin.service:
    name: containerd
    enabled: true

#
# configure containerd
# this command has been written as a shell script as using ansible's .command function did not yield positive results
- name: Configure containerd to use SystemdCgroup
  ansible.builtin.shell: | 
    containerd config default > /etc/containerd/config.toml
    sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
    systemctl restart containerd
  args:
    executable: /bin/bash
 
#
# install kubernetes
- name: Create kubernetes repo file
  file:
    path: "/etc/yum.repos.d/kubernetes.repo"
    state: "touch"
- name: Add kubernetes community-owned package repositories
  blockinfile:
    path: "/etc/yum.repos.d/kubernetes.repo"
    block: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
- name: Install kubernetes
  shell: |
          sudo dnf install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
- name: Enable kubelet service
  ansible.builtin.service:
    name: kubelet
    enabled: yes

#
# Configure kubelet
- name: Configure kubelet 
  lineinfile:
    path: /etc/sysconfig/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}
- service:
    name: kubelet
    daemon_reload: yes
    state: restarted

#
# Initialise cluster
- name: Initialise Kubernetes
  ansible.builtin.command: kubeadm init --apiserver-advertise-address="{{ ansible_host }}" --apiserver-cert-extra-sans="{{ ansible_host }}"  --node-name kubernetes --pod-network-cidr="{{ pod_cidr }}"
- name: Set kube config on controlplane
  ansible.builtin.shell: | # written as a shell script as using .command did not work
    mkdir -p /home/vagrant/.kube
    cp /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    chown vagrant:vagrant /home/vagrant/.kube/config
  args:
    executable: /bin/bash
- name: Remove taints
  become: true
  become_user: vagrant
  ansible.builtin.command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-

- name: Install flannel CNI
  become: true
  become_user: vagrant
  ansible.builtin.command: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml  
# - name: Install calico CNI
#   become: true
#   become_user: vagrant
#   ansible.builtin.command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.4/manifests/tigera-operator.yaml 
# - name: Install calico crds
#   become: true
#   become_user: vagrant
#   ansible.builtin.command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.4/manifests/custom-resources.yaml 

- name: Bootstrap cluster
  become: true
  become_user: vagrant
  ansible.builtin.shell: | 
    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    helm repo add fleet https://rancher.github.io/fleet-helm-charts/
    helm -n fleet-system install --create-namespace --wait fleet-crd fleet/fleet-crd
    helm -n fleet-system install fleet fleet/fleet
  args:
    executable: /bin/bash

#
# transfer kubeconfig to ansible host
- name: Fetch kube config from controlplane
  ansible.builtin.fetch:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    flat: yes # remove hostname file tree
